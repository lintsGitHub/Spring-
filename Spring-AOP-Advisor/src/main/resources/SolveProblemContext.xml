<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd ">

    <!--
    当前写的一些代码是有问题的，就像名称匹配，正则表达式匹配的一些代码
    1，在这些其中如果我们是单个目标类还好说，如果多个那就问题就出现了
    我们就要单独的为一个个目标类去造一个代理工厂吗？ 不可能
    这样的话，会导致我们的配置文件非常的臃肿，看起来恶心
    2，在main函数中我们我们看到了这一句代码：
    Per per = (Per) context.getBean("per");
    我们去拿的是代理对象，也就是增强后的对象，在逻辑上是错误的
    在程序中犯了一个大忌：我们希望拿到的是目标对象，而我们每次去拿的都是代理对象
    也就是说我们的耦合度提高了，就是SpringAOP与主业务逻辑代码完全耦合在一起
    -->

    <!--注册StudentBean-->
    <bean id="student" class="priv.lint.SolveProblem.Student"/>
    <!--注册切面 &#45;&#45; 环绕通知-->
    <bean id="interceptor" class="priv.lint.SolveProblem.MyMethodInterceptor"/>
    <!--注册正则表达式顾问-->
    <bean id="advisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="interceptor"/>
        <!--放的是全限定方法名 priv.lint.RegularExpressionMatchingMethod.sayHello-->
        <property name="pattern" value=".*sayHello"/>
    </bean>
    <!--注册代理工厂Bean-->
    <bean id="per" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="student"/>
        <property name="interceptorNames" value="advisor"/>
    </bean>
</beans>